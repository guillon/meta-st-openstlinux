From 896c2d9593520b6ee91869b0545d335bc763e32a Mon Sep 17 00:00:00 2001
From: Vincent Abriou <vincent.abriou@st.com>
Date: Mon, 19 Sep 2016 15:47:13 +0200
Subject: [PATCH 52/61] compositor-st: forbid sprite on several crtc

When a sprite is used it is assigned to a crtc until this sprite is
no more used.
A same sprite cannot be assigned on several crtc.
During repaint procedure, do not refresh sprite from other outputs

Change-Id: I1dd697769a9124ff0ac831ab73301ffc4eeb6aaf
Signed-off-by: Vincent Abriou <vincent.abriou@st.com>
Reviewed-on: https://gerrit.st.com/58017
Reviewed-by: Fabien DESSENNE <fabien.dessenne@st.com>
---
 libweston/compositor-st.c | 27 ++++++++++++++++++++++-----
 1 file changed, 22 insertions(+), 5 deletions(-)

diff --git a/libweston/compositor-st.c b/libweston/compositor-st.c
index 707f787..9e971a7 100644
--- a/libweston/compositor-st.c
+++ b/libweston/compositor-st.c
@@ -809,13 +809,16 @@ drm_output_repaint(struct weston_output *output_base,
 			.request.sequence = 1,
 		};
 
+		/* Don't flip planes from other outputs */
+		if (s->output != output)
+			continue;
+
 		if (s->vblank_pending) {
 			weston_xlog(" do not refresh the sprite=%p (currently in processing)\n", s);
 			continue;
 		}
 
-		if ((!s->current && !s->next) ||
-		    !drm_sprite_crtc_supported(output, s->possible_crtcs))
+		if (!s->current && !s->next)
 			continue;
 
 		if (s->next && !backend->sprites_hidden)
@@ -831,11 +834,13 @@ drm_output_repaint(struct weston_output *output_base,
 				      s->dest_w, s->dest_h,
 				      s->src_x, s->src_y,
 				      s->src_w, s->src_h);
-		if (ret)
+		if (ret) {
 			weston_log(" setplane failed: %d: %s\n",
 				ret, strerror(errno));
-		else
+			s->output = NULL;
+		} else {
 			s->vblank_pending = true;
+		}
 
 		vbl.request.type |= drm_waitvblank_pipe(output);
 
@@ -856,9 +861,9 @@ drm_output_repaint(struct weston_output *output_base,
 		if (ret) {
 			weston_log(" vblank event request failed: %d: %s\n",
 				ret, strerror(errno));
+			s->output = NULL;
 		}
 
-		s->output = output;
 		output->vblank_pending = 1;
 	}
 
@@ -970,6 +975,12 @@ vblank_handler(int fd, unsigned int frame, unsigned int sec, unsigned int usec,
 	output->vblank_pending = 0;
 
 	drm_output_release_fb(output, s->current);
+
+	if (!s->next) {
+		/* Sprite is no more used by the output */
+		s->output = NULL;
+	}
+
 	s->current = s->next;
 	s->next = NULL;
 	s->vblank_pending = false;
@@ -1148,6 +1159,9 @@ drm_output_prepare_overlay_view(struct drm_output *output,
 		if (!drm_sprite_crtc_supported(output, s->possible_crtcs))
 			continue;
 
+		if ((s->output != output) && (s->output != NULL))
+			continue;
+
 		/* Compare format with the formats of THIS sprite */
 		uint32_t i;
 		format_ok = 0;
@@ -1203,6 +1217,9 @@ drm_output_prepare_overlay_view(struct drm_output *output,
 
 	drm_fb_set_buffer(s->next, ev->surface->buffer_ref.buffer);
 
+	/* Sprite is associated to an output */
+	s->output = output;
+
 	box = pixman_region32_extents(&ev->transform.boundingbox);
 	s->plane.x = box->x1;
 	s->plane.y = box->y1;
-- 
2.7.4

