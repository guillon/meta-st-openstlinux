From 6a3f9bb9664db1c5caaff7fad72ce1ccc93e1f28 Mon Sep 17 00:00:00 2001
From: Vincent Abriou <vincent.abriou@st.com>
Date: Mon, 8 Aug 2016 10:53:42 +0200
Subject: [PATCH 44/61] compositor-st: cursors_are_broken per output

- manage cursors_are_broken per output
- add cursor related weston_xlog

Change-Id: I812c9c41c29011a98e594f8e1cc9ddabac741d2e
---
 libweston/compositor-st.c | 63 +++++++++++++++++++++++++++++++++--------------
 1 file changed, 45 insertions(+), 18 deletions(-)

diff --git a/libweston/compositor-st.c b/libweston/compositor-st.c
index b1daf62..af4a340 100644
--- a/libweston/compositor-st.c
+++ b/libweston/compositor-st.c
@@ -113,7 +113,7 @@ struct drm_backend {
 	int sprites_are_broken;
 	int sprites_hidden;
 
-	int cursors_are_broken;
+	int cursors_are_broken[2]; /* per output */
 
 	int use_pixman;
 
@@ -1141,33 +1141,59 @@ drm_output_prepare_cursor_view(struct drm_output *output,
 	struct weston_buffer_viewport *viewport = &ev->surface->buffer_viewport;
 	struct wl_shm_buffer *shmbuf;
 
+	weston_xlog("   %s: output_base->id = %d\n", __func__, output->base.id);
+
 	if (ev->transform.enabled &&
-	    (ev->transform.matrix.type > WESTON_MATRIX_TRANSFORM_TRANSLATE))
+	    (ev->transform.matrix.type > WESTON_MATRIX_TRANSFORM_TRANSLATE)) {
+		weston_xlog("    cursor KO: transform_translate\n");
 		return NULL;
-	if (b->gbm == NULL)
+	}
+	if (b->gbm == NULL) {
+		weston_xlog("    cursor KO: gbm\n");
 		return NULL;
-	if (output->base.transform != WL_OUTPUT_TRANSFORM_NORMAL)
+	}
+	if (output->base.transform != WL_OUTPUT_TRANSFORM_NORMAL) {
+		weston_xlog("    cursor KO: transform\n");
 		return NULL;
-	if (viewport->buffer.scale != output->base.current_scale)
+	}
+	if (viewport->buffer.scale != output->base.current_scale) {
+		weston_xlog("    cursor KO: scale\n");
 		return NULL;
-	if (output->cursor_view)
+	}
+	if (output->cursor_view) {
+		weston_xlog("    cursor KO: cursor_view\n");
 		return NULL;
-	if (ev->output_mask != (1u << output->base.id))
+	}
+	if (ev->output_mask != (1u << output->base.id)) {
+		weston_xlog("    cursor KO: mask\n");
 		return NULL;
-	if (b->cursors_are_broken)
+	}
+	if (b->cursors_are_broken[output->base.id]) {
+		weston_xlog("    cursor KO: broken\n");
 		return NULL;
-	if (ev->geometry.scissor_enabled)
+	}
+	if (ev->geometry.scissor_enabled) {
+		weston_xlog("    cursor KO: scissor\n");
 		return NULL;
-	if (ev->surface->buffer_ref.buffer == NULL)
+	}
+	if (ev->surface->buffer_ref.buffer == NULL) {
+		weston_xlog("    cursor KO: buffer\n");
 		return NULL;
+	}
 	shmbuf = wl_shm_buffer_get(ev->surface->buffer_ref.buffer->resource);
-	if (!shmbuf)
+	if (!shmbuf) {
+		weston_xlog("    cursor KO: shmbuf\n");
 		return NULL;
-	if (wl_shm_buffer_get_format(shmbuf) != WL_SHM_FORMAT_ARGB8888)
+	}
+	if (wl_shm_buffer_get_format(shmbuf) != WL_SHM_FORMAT_ARGB8888) {
+		weston_xlog("    cursor KO: format\n");
 		return NULL;
+	}
 	if (ev->surface->width > b->cursor_width ||
-	    ev->surface->height > b->cursor_height)
+	    ev->surface->height > b->cursor_height) {
+		weston_xlog("    cursor KO: size\n");
 		return NULL;
+	}
 
 	output->cursor_view = ev;
 
@@ -1243,7 +1269,7 @@ drm_output_set_cursor(struct drm_output *output)
 		if (drmModeSetCursor(b->drm.fd, output->crtc_id, handle,
 				b->cursor_width, b->cursor_height)) {
 			weston_log("failed to set cursor: %m\n");
-			b->cursors_are_broken = 1;
+			b->cursors_are_broken[output->base.id] = 1;
 		}
 	}
 
@@ -1258,7 +1284,7 @@ drm_output_set_cursor(struct drm_output *output)
 	if (output->cursor_plane.x != x || output->cursor_plane.y != y) {
 		if (drmModeMoveCursor(b->drm.fd, output->crtc_id, x, y)) {
 			weston_log("failed to move cursor: %m\n");
-			b->cursors_are_broken = 1;
+			b->cursors_are_broken[output->base.id] = 1;
 		}
 
 		output->cursor_plane.x = x;
@@ -1897,7 +1923,7 @@ drm_output_init_egl(struct drm_output *output, struct drm_backend *b)
 
 	if (output->gbm_cursor_bo[0] == NULL || output->gbm_cursor_bo[1] == NULL) {
 		weston_log("cursor buffers unavailable, using gl cursors\n");
-		b->cursors_are_broken = 1;
+		b->cursors_are_broken[0] = 1;
 	}
 
 	return 0;
@@ -3000,7 +3026,8 @@ planes_binding(struct weston_keyboard *keyboard, uint32_t time, uint32_t key,
 
 	switch (key) {
 	case KEY_C:
-		b->cursors_are_broken ^= 1;
+		b->cursors_are_broken[0] ^= 1;
+		b->cursors_are_broken[1] = b->cursors_are_broken[0];
 		break;
 	case KEY_V:
 		b->sprites_are_broken ^= 1;
@@ -3286,7 +3313,7 @@ drm_backend_create(struct weston_compositor *compositor,
 
 	/* A this point we have some idea of whether or not we have a working
 	 * cursor plane. */
-	if (!b->cursors_are_broken)
+	if (!b->cursors_are_broken[0] || !b->cursors_are_broken[1])
 		compositor->capabilities |= WESTON_CAP_CURSOR_PLANE;
 
 	path = NULL;
-- 
2.7.4

