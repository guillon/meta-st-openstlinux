From b0a2004d649ee7c5f84bb475d04098dec822b8a7 Mon Sep 17 00:00:00 2001
From: Christophe Priouzeau <christophe.priouzeau@linaro.org>
Date: Wed, 6 Apr 2016 15:32:12 +0200
Subject: [PATCH 02/13] STM: encodebin: enables hardware scaling

Allows videoconvert, videoscale,  videorate software elements to be surcharged
with hardware accelerated versions using defines.
If defines are not set, default software elements are used.
queue is added after first stage of convert/scale to parallelize conversion stage
with encoding stage.

Change-Id: I18871e33c6cae679af7fa493514350848779e32a
Signed-off-by: Hugues Fruchet <hugues.fruchet@st.com>
---
 gst/encoding/Makefile.am    |  4 +++-
 gst/encoding/gstencodebin.c | 25 +++++++++++++++----------
 2 files changed, 18 insertions(+), 11 deletions(-)

diff --git a/gst/encoding/Makefile.am b/gst/encoding/Makefile.am
index f9e7379..283ab30 100644
--- a/gst/encoding/Makefile.am
+++ b/gst/encoding/Makefile.am
@@ -1,12 +1,14 @@
 plugin_LTLIBRARIES = libgstencodebin.la
 
+csp_cflags = -DCOLORSPACE=\"videoconvert\" -DCOLORSPACE2=\"videoconvert\" -DVIDEOSCALE=\"videoscale\" -DVIDEORATE=\"videorate\"
+
 libgstencodebin_la_SOURCES = 	\
 	gstencodebin.c		\
 	gstsmartencoder.c	\
 	gststreamcombiner.c	\
 	gststreamsplitter.c
 
-libgstencodebin_la_CFLAGS = $(GST_PLUGINS_BASE_CFLAGS) $(GST_CFLAGS)
+libgstencodebin_la_CFLAGS = $(GST_PLUGINS_BASE_CFLAGS) $(GST_CFLAGS) $(csp_cflags)
 libgstencodebin_la_LDFLAGS = $(GST_PLUGIN_LDFLAGS)
 libgstencodebin_la_LIBADD = \
 	$(top_builddir)/gst-libs/gst/pbutils/libgstpbutils-@GST_API_VERSION@.la \
diff --git a/gst/encoding/gstencodebin.c b/gst/encoding/gstencodebin.c
index 4f20d68..7e0bd66 100644
--- a/gst/encoding/gstencodebin.c
+++ b/gst/encoding/gstencodebin.c
@@ -1434,45 +1434,49 @@ _create_stream_group (GstEncodeBin * ebin, GstEncodingProfile * sprof,
   if (GST_IS_ENCODING_VIDEO_PROFILE (sprof)) {
     const gboolean native_video =
         ! !(ebin->flags & GST_ENCODEBIN_FLAG_NO_VIDEO_CONVERSION);
-    GstElement *cspace = NULL, *scale, *vrate, *cspace2 = NULL;
+    GstElement *cspace = NULL, *scale, *vrate, *cspace2 = NULL, *queue;
 
     GST_LOG ("Adding conversion elements for video stream");
 
     if (!native_video) {
-      cspace = gst_element_factory_make ("videoconvert", NULL);
-      scale = gst_element_factory_make ("videoscale", NULL);
+      cspace = gst_element_factory_make (COLORSPACE, NULL);
+      scale = gst_element_factory_make (VIDEOSCALE, NULL);
       if (!scale) {
-        missing_element_name = "videoscale";
+        missing_element_name = VIDEOSCALE;
         goto missing_element;
       }
       /* 4-tap scaling and black borders */
       g_object_set (scale, "method", 2, "add-borders", TRUE, NULL);
-      cspace2 = gst_element_factory_make ("videoconvert", NULL);
+      cspace2 = gst_element_factory_make (COLORSPACE2, NULL);
 
       if (!cspace || !cspace2) {
-        missing_element_name = "videoconvert";
+        missing_element_name = COLORSPACE;
         goto missing_element;
       }
+      queue = gst_element_factory_make ("queue", NULL);
 
-      gst_bin_add_many ((GstBin *) ebin, cspace, scale, cspace2, NULL);
+      gst_bin_add_many ((GstBin *) ebin, cspace, scale, cspace2, queue, NULL);
       tosync = g_list_append (tosync, cspace);
       tosync = g_list_append (tosync, scale);
+      tosync = g_list_append (tosync, queue);
       tosync = g_list_append (tosync, cspace2);
 
       sgroup->converters = g_list_prepend (sgroup->converters, cspace);
       sgroup->converters = g_list_prepend (sgroup->converters, scale);
+      sgroup->converters = g_list_prepend (sgroup->converters, queue);
       sgroup->converters = g_list_prepend (sgroup->converters, cspace2);
 
       if (!fast_element_link (cspace, scale) ||
+          !fast_element_link (scale, queue) ||
           !fast_element_link (scale, cspace2))
         goto converter_link_failure;
     }
 
     if (!gst_encoding_video_profile_get_variableframerate
         (GST_ENCODING_VIDEO_PROFILE (sprof))) {
-      vrate = gst_element_factory_make ("videorate", NULL);
+      vrate = gst_element_factory_make (VIDEORATE, NULL);
       if (!vrate) {
-        missing_element_name = "videorate";
+        missing_element_name = VIDEORATE;
         goto missing_element;
       }
 
@@ -1579,7 +1583,8 @@ splitter_encoding_failure:
 
 no_muxer_pad:
   GST_ERROR_OBJECT (ebin,
-      "Couldn't find a compatible muxer pad to link encoder to");
+      "Couldn't find a compatible muxer pad to link encoder to"
+      "format %" GST_PTR_FORMAT "", format);
   goto cleanup;
 
 missing_element:
-- 
2.7.4

