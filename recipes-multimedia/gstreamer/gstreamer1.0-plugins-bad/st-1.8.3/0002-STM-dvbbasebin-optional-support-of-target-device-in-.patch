From f0948b44925e82ac1bd1e45c766d5953bc20943e Mon Sep 17 00:00:00 2001
From: Christophe Priouzeau <christophe.priouzeau@linaro.org>
Date: Thu, 7 Apr 2016 10:09:19 +0200
Subject: [PATCH 02/24] STM: dvbbasebin: optional support of target device in
 uri

Allows to set the target device in uri using syntax "dvb://<device>/<channel name>":
 gst-launch-1.0 playbin uri="dvb:///dev/dvb/adapter0/frontend1/France 2"

GST_DVB_FRONTEND environment variable added to set default frontend number
in addition to existing GST_DVB_ADAPTER for adapter number.

Target device in uri superseed environment variables.

Change-Id: I50b3b41adc60853df1260a42905e5454646eed97
Signed-off-by: Hugues FRUCHET <hugues.fruchet@st.com>
---
 sys/dvb/dvbbasebin.c    | 47 ++++++++++++++++++++++++++++++++++++++++++++---
 sys/dvb/dvbbasebin.h    |  1 +
 sys/dvb/parsechannels.c | 10 ++++++----
 sys/dvb/parsechannels.h |  1 +
 4 files changed, 52 insertions(+), 7 deletions(-)

diff --git a/sys/dvb/dvbbasebin.c b/sys/dvb/dvbbasebin.c
index a293617..c8f3ef6 100644
--- a/sys/dvb/dvbbasebin.c
+++ b/sys/dvb/dvbbasebin.c
@@ -571,6 +571,9 @@ dvb_base_bin_finalize (GObject * object)
 {
   DvbBaseBin *dvbbasebin = GST_DVB_BASE_BIN (object);
 
+  if (dvbbasebin->uri)
+    g_free (dvbbasebin->uri);
+
   g_hash_table_destroy (dvbbasebin->streams);
   g_hash_table_destroy (dvbbasebin->programs);
   g_list_free (dvbbasebin->pmtlist);
@@ -1159,6 +1162,11 @@ dvb_base_bin_uri_get_protocols (GType type)
 static gchar *
 dvb_base_bin_uri_get_uri (GstURIHandler * handler)
 {
+  DvbBaseBin *dvbbasebin = GST_DVB_BASE_BIN (handler);
+
+  if (dvbbasebin->uri)
+    return g_strdup_printf ("%s", dvbbasebin->uri);
+
   return g_strdup ("dvb://");
 }
 
@@ -1169,18 +1177,51 @@ dvb_base_bin_uri_set_uri (GstURIHandler * handler, const gchar * uri,
   DvbBaseBin *dvbbasebin = GST_DVB_BASE_BIN (handler);
   GError *err = NULL;
   gchar *location;
+  gchar *channel_name;
+  gchar *device;
+  const gchar *adapter;
+  const gchar *frontend;
+  int adapter_number = 0;
+  int frontend_number = 0;
 
   location = gst_uri_get_location (uri);
 
   if (location == NULL)
     goto no_location;
 
-  if (!set_properties_for_channel (GST_ELEMENT (dvbbasebin), location, &err))
+  channel_name = g_strdup (location);
+
+  /* check env for default adapter/frontend number */
+  adapter = g_getenv ("GST_DVB_ADAPTER");
+  if (adapter)
+    adapter_number = atoi (adapter);
+  frontend = g_getenv ("GST_DVB_FRONTEND");
+  if (frontend)
+    frontend_number = atoi (frontend);
+
+  /* check uri for optional adapter/frontend number */
+  if (sscanf (location, "/dev/dvb/adapter%u/frontend%u/",
+        &adapter_number, &frontend_number) == 2) {
+    /* adapter/frontend number found,
+     * now extract channel name given after device path
+     */
+    device = g_strdup_printf ("/dev/dvb/adapter%u/frontend%u/",
+               adapter_number, frontend_number);
+    g_free (channel_name);
+    channel_name = g_strdup (location + strlen (device));
+    g_free (device);
+  }
+  g_free (location);
+
+  if (!set_properties_for_channel (GST_ELEMENT (dvbbasebin),
+         adapter_number, frontend_number, channel_name, &err))
     goto set_properties_failed;
 
   /* FIXME: here is where we parse channels.conf */
 
-  g_free (location);
+  dvbbasebin->uri = g_strdup (uri);
+
+  g_free (channel_name);
   return TRUE;
 /* ERRORS */
 post_error_and_exit:
@@ -1199,7 +1240,7 @@ no_location:
   }
 set_properties_failed:
   {
-    g_free (location);
+    g_free (channel_name);
     goto post_error_and_exit;
   }
 }
diff --git a/sys/dvb/dvbbasebin.h b/sys/dvb/dvbbasebin.h
index 8454c92..cb6a4fe 100644
--- a/sys/dvb/dvbbasebin.h
+++ b/sys/dvb/dvbbasebin.h
@@ -47,6 +47,7 @@ typedef struct _DvbBaseBinClass DvbBaseBinClass;
 struct _DvbBaseBin {
   GstBin bin;
 
+  gchar *uri;
   GstElement *dvbsrc;
   GstElement *buffer_queue;
   GstElement *tsparse;
diff --git a/sys/dvb/parsechannels.c b/sys/dvb/parsechannels.c
index 1d30580..de551ff 100644
--- a/sys/dvb/parsechannels.c
+++ b/sys/dvb/parsechannels.c
@@ -194,13 +194,13 @@ destroy_channels_hash (GHashTable * channels)
 
 gboolean
 set_properties_for_channel (GstElement * dvbbasebin,
+    int adapter_number, int frontend_number,
     const gchar * channel_name, GError ** error)
 {
   gboolean ret = FALSE;
   GHashTable *channels, *params;
   gchar *filename;
   gchar *type;
-  const gchar *adapter;
 
   filename = g_strdup (g_getenv ("GST_DVB_CHANNELS_CONF"));
   if (filename == NULL) {
@@ -218,12 +218,14 @@ set_properties_for_channel (GstElement * dvbbasebin,
   if (!params)
     goto unknown_channel;
 
+  /* set adapter/frontend number */
+  g_object_set (dvbbasebin, "adapter", adapter_number, NULL);
+  g_object_set (dvbbasebin, "frontend", frontend_number, NULL);
+
   g_object_set (dvbbasebin, "program-numbers",
       g_hash_table_lookup (params, "sid"), NULL);
   /* check if it is terrestrial or satellite */
-  adapter = g_getenv ("GST_DVB_ADAPTER");
-  if (adapter)
-    g_object_set (dvbbasebin, "adapter", atoi (adapter), NULL);
+
   g_object_set (dvbbasebin, "frequency",
       atoi (g_hash_table_lookup (params, "frequency")), NULL);
   type = g_hash_table_lookup (params, "type");
diff --git a/sys/dvb/parsechannels.h b/sys/dvb/parsechannels.h
index 3e59fe7..5cb175b 100644
--- a/sys/dvb/parsechannels.h
+++ b/sys/dvb/parsechannels.h
@@ -25,6 +25,7 @@
 #define PARSE_CHANNELS_H
 
 gboolean set_properties_for_channel (GstElement  * dvbbasebin,
+                                     int adapter_number, int frontend_number,
                                      const gchar * channel_name,
                                      GError     ** error);
 
-- 
2.7.4

